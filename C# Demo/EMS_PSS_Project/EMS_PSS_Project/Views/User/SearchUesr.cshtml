@model PagedList.IPagedList<EMS_PSS_Project.Models.EMS_User>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "User List";
}

<h2>User List</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@using (Html.BeginForm("Index", "User", FormMethod.Get))
{
    <p>
        Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}


<table class="table">
    <tr>
        <th>
            @*@Html.DisplayNameFor(model => model.First_Name)*@
            @Html.ActionLink("First Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter})
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Last_Name)*@
            @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.SecurityLevel.SecurityLevel_ID)*@
            @Html.ActionLink("Scurity Level", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.DisplayName("User Name")
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                 @Html.DisplayFor(modelItem => item.First_Name) 
                
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Last_Name)  
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SecurityLevel.ScurityDescription)              
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.User_Name)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.User_ID }) |
                @Html.ActionLink("Details", "Details", new { id = item.User_ID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.User_ID })
            </td>
        </tr>
    }

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
